#!/bin/bash

#
# Copyright (c) 2020, 219 Design, LLC
# See LICENSE.txt
#
# https://www.219design.com
# Software | Electrical | Mechanical | Product Design
#

set -Eeuxo pipefail # https://vaneyckt.io/posts/safer_bash_scripts_with_set_euxo_pipefail/

pushd .
trap "popd" EXIT HUP INT QUIT TERM

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
cd $DIR  # enter this script's directory. (in case called from root of repository)


if [ -f build_qt_binaries/.git ]; then
  echo "Skipping any work in qt5 bin submodule. Looks done already."
else
  git submodule update --init --recursive build_qt_binaries
fi

if [ -f fluidsynth/.git ]; then
  echo "Skipping any work in fluidsynth submodule. Looks done already."
else
  git submodule update --init --recursive fluidsynth
fi

mkdir -p build/fsynth
pushd build/fsynth >& /dev/null
  cmake --enable-debug -DCMAKE_BUILD_TYPE=Debug ../../fluidsynth/
  make VERBOSE=1 DESTDIR=./gcc_64
  make VERBOSE=1 DESTDIR=./gcc_64 install
popd >& /dev/null
cp fluidsynth/src/midi/fluid_midi.h build/fsynth/gcc_64/usr/local/include/fluidsynth/ # TODO: is this supposed to be a private header? i need the NOTE_ON constant
patch build/fsynth/gcc_64/usr/local/include/fluidsynth/fluid_midi.h patch_fluid_midi.h.patch

mkdir -p build/generated_files/autogenerated
tools/update_version_strings.sh tools/version.h build/generated_files/autogenerated/version.h

source $DIR/path_to_qmake.bash

cd build
qmake "$DIR"

# https://stackoverflow.com/questions/17578150/add-cflags-to-qmake-project-without-hard-coding-them-in-the-pro-file
# https://stackoverflow.com/questions/7754218/qmake-how-to-add-and-use-a-variable-into-the-pro-file
make CPPFLAGS_DEF_QSTYLE="HEORY_APPTEST"

make install # puts necessary items side-by-side with app exe

pushd $DIR/build/src/apptest >& /dev/null
  rm collection.o
  make CPPFLAGS_DEF_QSTYLE="HEORY_BOGUSVAR" # make without HEORY_APPTEST (so we ensure it builds with and without it)
  rm collection.o
popd >& /dev/null
